- id: fa3d6ded-04a9-4001-b826-693865fdb99e
  alias: Waste Collection Reminder
  description: Waste collection reminder
  mode: single
  trigger:
  - platform: calendar
    event: start
    offset: -06:00:00
    entity_id: calendar.waste_collection
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.calendar_event.summary in ["Garbage", "Garbage
          & Glass"] }}'
      sequence:
      - service: notify.jena_phone
        data:
          title: Waste Collection Reminder
          message: '{{ trigger.calendar_event.summary }} pickup is tomorrow!

            '
    default:
    - service: notify.mike_phone
      data:
        title: Waste Collection Reminder
        message: '{{ trigger.calendar_event.summary }} pickup is tomorrow!'
- id: 8911b2c7-4f17-4166-b45a-2582ac663e75
  alias: AC Window Open Notification
  description: AC Windows Reminder
  mode: single
  trigger:
  - platform: state
    entity_id:
    - climate.home
    attribute: hvac_action
    to: cooling
    for:
      minutes: 1
  condition:
  - condition: state
    entity_id: group.window_sensors
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: person.jena
      state: home
    then:
    - service: notify.jena_phone
      data:
        title: Batten down the hatches!
        message: '{{ states | selectattr(''entity_id'',''in'', state_attr(''group.window_sensors'',''entity_id''))
          | selectattr(''state'',''eq'',''on'') | map(attribute=''name'') | join('',
          '') }} are open!

          '
  - if:
    - condition: state
      entity_id: person.mike
      state: home
    then:
    - service: notify.mike_phone
      data:
        title: Batten down the hatches!
        message: '{{ states | selectattr(''entity_id'',''in'', state_attr(''group.window_sensors'',''entity_id''))
          | selectattr(''state'',''eq'',''on'') | map(attribute=''name'') | join('',
          '') }} are open!

          '
- id: 4085e051-34e7-4fe8-865b-876231d8360c
  alias: HACS Update Notification
  description: Check for HACS updates at noon and send notification
  mode: single
  trigger:
  - platform: time
    at: '12:00:00'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.hacs
      state: '0'
  action:
  - service: notify.mike_phone
    data:
      title: HACS Updates Available!
      message: '{{ states(''sensor.hacs'') }} HACS plugin update(s) available!

        '
      data:
        url: /hacs/entry
        clickAction: /hacs/entry
- id: 27cd055a-4985-4718-bcfd-1e2c9e969e3b
  alias: Set Lovelace Minimalist Theme
  description: Set theme on start
  mode: single
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: frontend.set_theme
    data:
      name: minimalist-ios-tapbar
      mode: dark
- id: 13acacc8-ccc4-438d-8e99-3b8d35f76511
  alias: Tesla Location
  description: ''
  trigger:
  - platform: mqtt
    topic: teslamate/cars/1/latitude
  - platform: mqtt
    topic: teslamate/cars/1/longitude
  action:
  - service: device_tracker.see
    data_template:
      dev_id: tesla_location
      gps:
      - '{{ states.sensor.tesla_latitude.state }}'
      - '{{ states.sensor.tesla_longitude.state }}'
  initial_state: true
- id: 703d666a-bae6-445c-8c39-d6c62eefeb49
  alias: Garage Door Actions
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: GARAGE_DOOR_CLOSE
    id: CLOSE
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: GARAGE_DOOR_OPEN
    id: OPEN
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: OPEN
      - condition: state
        entity_id: cover.gdo_door
        state: closed
      sequence:
      - service: cover.open_cover
        target:
          entity_id: cover.gdo_door
        data: {}
    - conditions:
      - condition: trigger
        id: CLOSE
      - condition: state
        entity_id: cover.gdo_door
        state: open
      sequence:
      - service: cover.close_cover
        target:
          entity_id: cover.gdo_door
        data: {}
    default: []
  mode: single
- id: 7a561b01-25cb-45cf-be94-dac09bf360e9
  alias: Living Room Scene Selector
  description: automation for input_select.living_room
  trigger:
  - platform: state
    entity_id: input_select.living_room
  - platform: state
    entity_id: group.living_room_lights_all
    id: group_trigger_all
  - platform: state
    entity_id: group.living_room_lights
    id: group_trigger
  - platform: state
    entity_id: light.jena_lamp
    id: entity
  - platform: state
    entity_id: light.tv_lamp
    id: entity
  - platform: state
    entity_id: light.wled_bookshelf_master
    id: entity
  - platform: state
    entity_id: light.christmas_twree
    id: entity
  - platform: state
    entity_id: light.wled_livingroom_master
    id: entity
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: group_trigger_all
        - condition: trigger
          id: entity
        - condition: trigger
          id: group_trigger
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.living_room_lights
            state: 'off'
          sequence:
          - service: input_select.select_option
            data:
              option: 'Off'
            target:
              entity_id: input_select.living_room
        - conditions:
          - condition: state
            entity_id: light.living_room_lights_all
            state: 'on'
          sequence:
          - service: input_select.select_option
            data:
              option: 'On'
            target:
              entity_id: input_select.living_room
        default:
        - service: input_select.select_option
          data:
            option: Unknown
          target:
            entity_id: input_select.living_room
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "On" }}'
      sequence:
      - scene: scene.living_room_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "Off" }}'
      sequence:
      - scene: scene.living_room_off
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "Dimmed" }}'
      sequence:
      - scene: scene.living_room_dimmed_2
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "Night Light" }}'
      sequence:
      - scene: scene.living_room_night_light
    default: []
  mode: single
- id: 90bd2488-3a65-4697-9069-c3b2a316e527
  alias: Front Door Actions
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: FRONT_DOOR_LOCK
    id: LOCK
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: FRONT_DOOR_UNLOCK
    id: UNLOCK
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: UNLOCK
      - condition: state
        entity_id: lock.front_door_lock
        state: locked
      sequence:
      - service: lock.unlock
        target:
          entity_id: lock.front_door_lock
        data: {}
    - conditions:
      - condition: trigger
        id: LOCK
      - condition: state
        entity_id: lock.front_door_lock
        state: unlocked
      sequence:
      - service: lock.lock
        target:
          entity_id: lock.front_door_lock
        data: {}
    default: []
  mode: single
- id: 369b6770-b1fe-4f14-a273-cb95db0f56bb
  alias: Hue Go Scene Selector
  description: scene triggers for hue go
  trigger:
  - platform: state
    entity_id: light.hue_go
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "On" }}'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.hue_go
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "Off" }}'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.hue_go
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "Dimmed" }}'
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 50
        target:
          entity_id: light.hue_go
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == "Night Light" }}'
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 10
        target:
          entity_id: light.hue_go
    default: []
  mode: single
- id: 4a87ceb8-e84c-4076-952a-c8abaeb7b9c7
  alias: Home Alarm Actions
  description: Confirm action, then cancel print
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ALARM_DISARM
    id: disarm
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ALARM_ARM
    id: arm
  condition: []
  action:
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''disarm'' }}'
      sequence:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.home_alarm
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''arm'' }}'
      sequence:
      - service: alarm_control_panel.alarm_arm_home
        target:
          entity_id: alarm_control_panel.home_alarm
        data: {}
  mode: parallel
- id: 5e123bef-5249-4946-b4d9-c4a8b1040391
  alias: 'Coming Home: Entry Lights On'
  description: Coming home automation
  trigger:
  - platform: zone
    entity_id: person.jena
    zone: zone.home
    event: enter
  - platform: zone
    entity_id: person.mike
    zone: zone.home
    event: enter
  condition:
  - condition: or
    conditions:
    - condition: sun
      after: sunset
      after_offset: -02:00:00
    - condition: sun
      before: sunrise
      before_offset: 02:00:00
  action:
  - wait_for_trigger:
    - platform: state
      entity_id:
      - lock.front_door_lock
      to: unlocked
  - service: light.turn_on
    target:
      entity_id:
      - light.entry_stairs_light
      - light.sonoff31_1
      - light.kitchen_light
    data: {}
  mode: single
- id: a2d52348-e8e6-4129-a683-5b82a55d80b1
  alias: Contact Lens Reminder
  description: Contact Lens Notification Reminder
  trigger:
  - platform: time
    at: 09:00:00
  condition:
  - condition: template
    value_template: '{{ now().day == 6 }}'
  action:
  - alias: Set up variables for the actions
    variables:
      action_changed: '{{ ''OPEN_'' ~ context.id }}'
  - service: notify.mike_phone
    data:
      message: Contact change reminder
      title: Time to change Contacts!
      actions:
      - action: '{{ action_changed }}'
        title: Changed
  - alias: Wait for a response
    wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_changed }}'
    continue_on_timeout: false
  - service: input_datetime.set_datetime
    data:
      timestamp: '{{ now().timestamp() }}'
    target:
      entity_id: input_datetime.contact_lens_changed
  mode: single
- id: a7fddf7d-e97c-45e0-a6e7-0eae5004ccbc
  alias: Lights On Routine
  description: ''
  trigger:
  - platform: template
    value_template: '{{now().strftime(''%a %h %d %H:%M %Z %Y'') == (((state_attr(''sensor.mike_phone_next_alarm'',
      ''Time in Milliseconds'') | int / 1000) - 1*60 ) | timestamp_custom(''%a %h
      %d %H:%M %Z %Y''))}}'
  condition:
  - condition: state
    entity_id: person.mike
    state: home
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.master_bathroom_motion_detector_occupancy
      to: 'on'
    timeout: 3600
    continue_on_timeout: false
  - choose:
    - conditions:
      - condition: state
        entity_id: person.jena
        state: home
      sequence:
      - delay:
          seconds: 5
  - service: homeassistant.turn_on
    target:
      area_id: master_bathroom
    data: {}
  - delay:
      minutes: 20
  - choose:
    - conditions:
      - condition: state
        entity_id: person.jena
        state: away
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.master_bedroom_light
        data: {}
  - service: light.turn_on
    target:
      area_id: hallway
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id: light.master_bedroom_light
      to: 'off'
    - platform: state
      entity_id: light.master_bathroom_lights
      to: 'off'
    timeout: 1800
    continue_on_timeout: false
  - delay:
      seconds: 10
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      area_id:
      - living_room
      - kitchen
  mode: single
- id: 9a67d806-4cf0-44cb-93ea-f32d08d1ba62
  alias: Wireless Charging Night Routine
  description: Evening Routine, wireless charging trigger
  trigger:
  - platform: state
    entity_id: sensor.mike_phone_charger_type
    to: wireless
  condition:
  - condition: time
    before: 04:00:00
    after: '21:00:00'
  - condition: zone
    entity_id: person.mike
    zone: zone.home
  action:
  - service: alarm_control_panel.alarm_arm_night
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  - alias: Turn all lights off, check if Jena is awake to cancel
    if:
    - condition: zone
      entity_id: person.jena
      zone: zone.home
    - condition: time
      weekday:
      - fri
      - sat
    then:
    - alias: Set up variables for the actions
      variables:
        action_yes: '{{ ''YES_'' ~ context.id }}'
        action_no: '{{ ''NO_'' ~ context.id }}'
    - alias: Ask to cancel lights off
      service: notify.jena_phone
      data:
        title: It is bedtime!
        message: would you like to turn the lights off?
        data:
          actions:
          - action: '{{ action_yes }}'
            title: Yes, lights off
          - action: '{{ action_no }}'
            title: No, keep them on
    - alias: Wait for a response
      wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: '{{ action_yes }}'
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: '{{ action_no }}'
      timeout:
        minutes: 1
      continue_on_timeout: true
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ wait.trigger and wait.trigger.event.data.action == action_no
            }}'
        sequence:
        - stop: Jena said so
  - service: light.turn_off
    target:
      entity_id: light.all_lights
    data: {}
  mode: single
- id: e9e7e1f6-2b0f-408d-88e5-8a262cad80b7
  alias: Hue Go Routine
  description: Turn Hue Go on in the morning
  trigger:
  - platform: template
    value_template: '{{ now().timestamp() | timestamp_custom(''%H:%M'') == (state_attr(''input_datetime.jena_alarm'',
      ''timestamp'') - 5*60) | timestamp_custom(''%H:%M'', false) }}'
  condition:
  - condition: state
    entity_id: input_boolean.jena_alarm_enabled
    state: 'on'
  - condition: state
    entity_id: person.jena
    state: home
  - condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  - condition: template
    value_template: '{{ now().month >= 8 or now().month <= 4 }}'
  action:
  - service: light.turn_on
    data:
      transition: 300
      brightness_step: 200
      color_temp: 355
    target:
      entity_id: light.hue_go
  - wait_for_trigger:
    - platform: state
      entity_id:
      - light.guest_bedroom_light
      to: 'on'
    timeout:
      minutes: 25
  - service: light.turn_off
    target:
      entity_id: light.hue_go
    data: {}
  mode: single
- id: 6c11052a-1ed4-49f3-ab12-0293fd86c749
  alias: Lights Off Away
  description: ''
  trigger:
  - platform: template
    value_template: '{{ now().timestamp() | timestamp_custom(''%H:%M'') == (state_attr(''input_datetime.jena_alarm'',
      ''timestamp'') - 1*60) | timestamp_custom(''%H:%M'', false) }}'
  condition:
  - condition: state
    entity_id: input_boolean.jena_alarm_enabled
    state: 'on'
  - condition: state
    entity_id: person.jena
    state: home
  - condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  action:
  - wait_for_trigger:
    - platform: zone
      entity_id: person.jena
      zone: zone.home
      event: leave
    - platform: state
      entity_id:
      - lock.front_door_lock
      to: unlocked
    timeout:
      hours: 2
  - service: light.turn_off
    target:
      area_id:
      - kitchen
      - living_room
    data: {}
  mode: single
- id: e2c52eaa-0d5c-42bd-8b1a-6bc650b8825a
  alias: Main Floor Lights On
  description: Turn on living room lights in the morning
  trigger:
  - platform: template
    value_template: '{{ now().timestamp() | timestamp_custom(''%H:%M'') == (state_attr(''input_datetime.jena_alarm'',
      ''timestamp'') - 1*60) | timestamp_custom(''%H:%M'', false) }}'
  condition:
  - condition: state
    entity_id: input_boolean.jena_alarm_enabled
    state: 'on'
  - condition: state
    entity_id: person.jena
    state: home
  - condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  action:
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_on
    target:
      entity_id:
      - light.christmas_tree
      - light.wled_bookshelf
      - light.wled_livingroom
      area_id:
      - kitchen
    data: {}
  mode: single
- id: 16823993-6422-4ea6-b755-d38f61a6cff1
  alias: Outdoor Light Timer
  description: Christmas lights timer
  trigger:
  - platform: sun
    event: sunset
    offset: -01:30:00
    id: turn_on
  - platform: sun
    event: sunset
    offset: +07:30:00
    id: turn_off
  condition:
  - condition: state
    entity_id: binary_sensor.is_christmas_ish_time
    state: 'on'
  action:
  - service: light.{{ trigger.id }}
    target:
      entity_id:
      - light.christmas_tree
      - light.outdoor_christmas_lights
      - light.sonoff31_1
      - light.wled_bookshelf
      - light.wled_livingroom
  - if:
    - condition: trigger
      id: turn_on
    then:
    - service: select.select_option
      data:
        option: Christmas
      target:
        entity_id:
        - select.wled_bookshelf_preset
        - select.wled_livingroom_preset
  mode: single
- id: 97d5b50f-8da1-4f7e-b867-3dac37099caa
  alias: Motion, Light On
  description: Turn light on when motion detected
  trigger:
  - platform: state
    entity_id: binary_sensor.entry_motion_detector_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.office_lights
    state: 'off'
  - condition: time
    before: '21:00:00'
    after: 06:00:00
  action:
  - service: light.turn_on
    target:
      area_id: office
    data: {}
  mode: single
- id: bf7229ca-f89b-43b1-bc22-7584d4931706
  alias: Doorbell Offline
  description: Notify if doorbell offline for 10 minutes
  trigger:
  - platform: state
    entity_id:
    - camera.front_door_main
    to: unavailable
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: notify.mike_phone
    data:
      title: Doorbell Offline!
      image: '{{ state_attr(''camera.doorbell'', ''entity_picture'') }}'
      message: since {{ as_timestamp(trigger.from_state.last_changed) | timestamp_custom('%y-%m-%d
        %H:%M', true) }}
  mode: single
- id: a179567f-c15d-47d5-9ffa-3ebf626a5b99
  alias: Entry Outside Light Timer
  description: Door light timer
  trigger:
  - platform: sun
    event: sunset
    offset: +00:20:00
    id: turn_on
  - platform: time
    at: '20:30:00'
    id: turn_off
  - platform: sun
    event: sunrise
    offset: 0
    id: turn_off
  condition:
  - condition: state
    entity_id: binary_sensor.is_christmas_ish_time
    state: 'off'
  action:
  - service: light.{{ trigger.id }}
    target:
      entity_id: light.entry_light
  mode: single
- id: 88d5a3db-0080-41d7-92fe-5c32664b9d6e
  alias: Doorbell Pressed Recently
  description: Doorbell Ring Notification
  trigger:
  - entity_id: binary_sensor.front_door_button_pressed
    platform: state
    to: 'on'
    id: turn_on
  - entity_id: binary_sensor.front_door_button_pressed
    platform: state
    to: 'on'
    id: turn_off
    for:
      minutes: 5
  - platform: time_pattern
    minutes: /10
    id: turn_off
  action:
  - if:
    - condition: trigger
      id: turn_off
    - condition: not
      conditions:
      - condition: state
        entity_id: input_boolean.doorbell_pressed_recently
        for:
          hours: 0
          minutes: 5
          seconds: 0
        state: 'on'
    then:
    - stop: was recently pressed
  - service: input_boolean.{{ trigger.id }}
    target:
      entity_id: input_boolean.doorbell_pressed_recently
  mode: restart
- id: 5e0b9900-d3f3-435e-9d2d-9788e9f86842
  alias: Front Door Auto-Lock Timer
  description: Auto lock front door after 5 minutes
  trigger:
  - platform: state
    entity_id: lock.front_door_lock
    to: unlocked
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: zone
    entity_id: person.jena
    zone: zone.home
    event: leave
  - platform: zone
    entity_id: person.mike
    zone: zone.home
    event: leave
  condition:
  - condition: state
    entity_id: lock.front_door_lock
    state: unlocked
  action:
  - service: lock.lock
    target:
      entity_id: lock.front_door_lock
    data: {}
  mode: single
- id: f0bb9575-0283-494d-b2b8-4082ff8a3f37
  alias: Doorbell Pressed Notify
  description: Doorbell Ring Notification
  trigger:
  - entity_id: binary_sensor.front_door_button_pressed
    platform: state
    to: 'on'
  condition: []
  action:
  - alias: Set up variables for the actions
    variables:
      action_1: FRONT_DOOR_UNLOCK
  - data_template:
      entity_id: camera.doorbell
      filename: /config/www/doorbell/{{ expand(button)[0].last_changed | as_timestamp  |
        timestamp_custom("%Y-%m-%d_%H-%M-%S") }}.jpg
    service: camera.snapshot
  - service: notify.all_devices
    data:
      title: Someone's at the front door!
      message: '{{ as_timestamp(now()) | timestamp_custom(''%d:%m %H:%M'', true) }}'
      data:
        ttl: 0
        priority: high
        channel: alarm_stream
        push:
          sound:
            name: US-EN-Morgan-Freeman-Someone-Is-Arriving.wav
            critical: 1
            volume: 1
        image: '{{ image_file }}'
        actions:
        - action: URI
          title: View
          uri: '{{ view_uri }}'
        - action: URI
          title: Answer
          uri: '{{ answer_uri }}'
        - action: '{{ action_1 }}'
          title: Unlock
  mode: parallel
  variables:
    button: binary_sensor.front_door_button_pressed
    dashboard_uri: /lovelace/default_view
    view_uri: /lovelace/doorbell
    answer_uri: /lovelace/doorbell-answer
    image_file: /local/doorbell/{{ expand(button)[0].last_changed | as_timestamp  |
      timestamp_custom("%Y-%m-%d_%H-%M-%S") }}.jpg
- id: aad80618-b3b1-43cc-925e-17628095ba40
  alias: Doorbell Pressed, Night, Light On
  description: Turn on entry light if doorbell pressed at night
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_button_pressed
    to: 'on'
  condition:
  - condition: sun
    after: sunset
    before: sunrise
    before_offset: -01:00:00
  - condition: state
    entity_id: light.entry_light
    state: 'off'
  action:
  - service: light.turn_on
    target:
      entity_id: light.entry_light
    data: {}
  - delay:
      minutes: 10
  - service: light.turn_off
    target:
      entity_id: light.entry_light
    data: {}
  mode: restart
- id: c7cca918-1c0c-4a24-b87b-bf611df6cf4e
  alias: Doorbell Notification
  description: Doorbell notifications blueprint
  use_blueprint:
    path: SgtBatten/Stable.yaml
    input:
      camera: camera.doorbell
      base_url: https://home-assistant.chestr.dev
      message: '{{ label }} detected - Front Door'
      critical: '{{''false'' if now().hour in [8,9,10,11,12,13,14,15,16,17,18] else
        ''true''}}'
      notify_device: 5f8785dad20db3d7c02c2d415541e0f6
      ios_live_view: true
      labels:
      - person
      - package
      disable_times:
      - '10'
      - '11'
      - '12'
      - '13'
      - '14'
      - '15'
      - '16'
      - '17'
- id: 9bade4b0-b05a-4e92-a395-cc3f055fb128
  alias: Theatre Mode Periodic Reset
  description: ''
  trigger:
  - platform: time
    at: 03:00:00
    id: turn_on
  action:
  - service: input_boolean.{{ trigger.id }}
    target:
      entity_id: input_boolean.theatre_mode
  mode: single
- id: 0f398ec0-490a-4c1e-ad26-6567670e64f8
  alias: Midnight Lights Off
  description: Automation to turn off living room lights at a specified time
  trigger:
  - platform: time
    at: 00:00:00
    id: 12am
  condition:
  - condition: and
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: person.jena
        state: home
      - condition: state
        entity_id: person.mike
        state: home
  action:
  - service: light.turn_off
    target:
      area_id: living_room
    data: {}
  mode: single
- id: dc3d21f7-5302-45ab-b348-1ce964580ea6
  alias: FireTV Paused, Lights On
  description: FireTV Theatre Mode
  trigger:
  - platform: state
    entity_id:
    - media_player.fire_tv
    to: playing
    for:
      seconds: 10
  condition:
  - condition: sun
    after: sunset
    after_offset: +03:00:00
  - condition: state
    entity_id: input_boolean.theatre_mode
    state: 'on'
  action:
  - service: light.turn_off
    data:
      transition: 5
    target:
      entity_id:
      - light.entry_stairs_light
      - light.kitchen_lights
      - light.tv_light
      - light.couch_light
      - light.second_floor_stairs_light
  - service: light.turn_on
    data:
      brightness: 100
      transition: 5
    target:
      entity_id:
      - light.wled_livingroom
  - service: select.select_option
    data:
      option: Theatre
    target:
      entity_id: select.wled_livingroom_preset
  - delay:
      minutes: 5
  mode: single
- id: 915eb363-ed77-414b-8eca-308741e468a0
  alias: Vacuum Schedule
  description: ''
  trigger:
  - platform: time
    at: '15:00:00'
    id: afternoon
  - platform: time
    at: 01:00:00
    id: night
  action:
  - choose:
    - conditions:
      - condition: time
        weekday:
        - mon
        - wed
        - fri
      - condition: not
        conditions:
        - condition: or
          conditions:
          - condition: zone
            entity_id: person.mike
            zone: zone.home
          - condition: zone
            entity_id: person.jena
            zone: zone.home
      - condition: trigger
        id: afternoon
      sequence:
      - service: select.select_option
        entity_id: select.moomba_room_1_suction_level
        data:
          option: turbo
      - service: select.select_option
        entity_id: select.moomba_room_1_cleaning_times
        data:
          option: 1x
      - service: vacuum.start
        target:
          entity_id: vacuum.moomba
        data: {}
    - conditions:
      - condition: time
        weekday:
        - tue
        - thu
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      - condition: trigger
        id: afternoon
      sequence:
      - service: select.select_option
        entity_id: select.moomba_room_1_suction_level
        data:
          option: quiet
      - service: select.select_option
        entity_id: select.moomba_room_1_cleaning_times
        data:
          option: 2x
      - service: vacuum.start
        target:
          entity_id: vacuum.moomba
        data: {}
  mode: single
- id: 1a90f945-0125-4f2a-b0d7-c5024d747b26
  alias: Lights On Sunset
  description: Turn living room lights on at sunset
  trigger:
  - platform: sun
    event: sunset
    id: sunset
    offset: -00:30:00
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: person.jena
      state: home
    - condition: state
      entity_id: person.mike
      state: home
  action:
  - service: light.turn_on
    target:
      area_id: living_room
    data: {}
  mode: single
- id: 4b2201f9-9a6a-46ce-b6d8-2fc50c1db305
  alias: Camera Record, Home Armed
  description: Living Room
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.home_alarm
    to: armed_night
    id: turn_on
  - platform: state
    entity_id:
    - alarm_control_panel.home_alarm
    to: armed_away
    id: turn_on
  - platform: state
    entity_id:
    - alarm_control_panel.home_alarm
    to: disarmed
    id: turn_off
  action:
  - service: homeassistant.{{ trigger.id }}
    target:
      entity_id:
      - switch.living_room_detect
      - switch.living_room_motion
      - switch.living_room_recordings
      - switch.living_room_snapshots
  mode: single
- id: 9a93fee9-693d-4350-a77c-94ea66a4ce98
  alias: Fan Aux Button Toggle
  description: Fan Aux Automations
  trigger:
  - platform: state
    entity_id: fan.powder_room_fan
    attribute: action
    to: config_single
  condition:
  - condition: state
    entity_id: fan.powder_room_fan
    state: 'off'
  action:
  - service: script.turn_on
    target:
      entity_id: script.inovelli_aux_toggle_led_brightness
    data:
      variables:
        entity_id: '{{ entity_id }}'
        intensity_min: '{{ intensity_min }}'
        intensity_max: '{{ intensity_max }}'
        debug: '{{ debug }}'
  mode: restart
  trigger_variables:
    entity_id: fan.powder_room_fan
  variables:
    entity_id: fan.powder_room_fan
    intensity_min: 0
    intensity_max: 25
    debug: false
- id: 73b6f288-d478-48ed-aac1-a0b7edaef342
  alias: Fan Timer
  description: Fan Timer Automations
  trigger:
  - platform: template
    value_template: '{{ is_state(entity_id, ''on'') }}'
    id: 'on'
  - platform: template
    value_template: '{{ is_state(entity_id, ''off'') }}'
    id: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.inovelli_falling_led
        data:
          entity_id: '{{ entity_id }}'
          on_color: '{{ on_color }}'
          on_intensity: '{{ on_intensity }}'
          off_color: '{{ off_color }}'
          off_intensity: '{{ off_intensity }}'
          duration: '{{ duration }}'
          step_transition_color: '{{ step_transition_color }}'
          step_transition_effect: '{{ step_transition_effect }}'
          step_transition_duration: '{{ step_transition_duration }}'
          step_transition_level: '{{ step_transition_level }}'
          step_transition_last_only: '{{ step_transition_last_only }}'
          debug: '{{ debug }}'
      - service: homeassistant.turn_off
        target:
          entity_id: '{{ entity_id }}'
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - alias: Level Set All LEDs
        service: script.turn_on
        target:
          entity_id: script.inovelli_level_set
        data:
          variables:
            entity_id: '{{ entity_id }}'
            on_color: '{{ on_color }}'
            on_intensity: '{{ on_intensity }}'
            off_color: '{{ off_color }}'
            off_intensity: '{{ off_intensity }}'
            debug: '{{ debug }}'
  mode: restart
  trigger_variables:
    entity_id: fan.powder_room_fan
  variables:
    entity_id: fan.powder_room_fan
    on_color: 80
    on_intensity: 40
    off_color: 160
    off_intensity: 15
    duration:
      minutes: 30
    step_transition_color: 0
    step_transition_effect: fast_blink
    step_transition_duration: 15
    step_transition_level: 100
    step_transition_last_only: true
    debug: false
- id: 0ee989df-a6ff-4ffc-917a-5f9d6ae41163
  alias: Light Timer
  description: Door light timer
  trigger:
  - platform: state
    entity_id: binary_sensor.patio_door_contact
    to: 'off'
    for:
      hours: 1
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: light.patio_lights
    state: 'on'
  action:
  - service: light.turn_off
    target:
      area_id: patio
    data: {}
  mode: single
- id: bc4b2d28-ad77-4ad8-b266-8f75fee492db
  alias: Patio Door Open, Lights On
  description: Patio door opened, turn on light
  trigger:
  - platform: state
    entity_id: binary_sensor.patio_door_contact
    to: 'on'
  condition:
  - condition: state
    entity_id: light.patio_lights
    state: 'off'
  - condition: sun
    after: sunset
    after_offset: -00:45:00
  action:
  - service: light.turn_on
    target:
      area_id: patio
    data: {}
  mode: single
- id: e8117429-dd3a-47f2-99bc-7f4fc39d0446
  alias: Humidity Fan On
  description: Bathroom Humidity High
  trigger:
  - platform: numeric_state
    entity_id: sensor.guest_bathroom_sensor_humidity
    above: 60
    id: turn_on
  - platform: numeric_state
    entity_id: sensor.guest_bathroom_sensor_humidity
    below: 50
    for:
      minutes: 10
    id: turn_off
  action:
  - service: fan.{{ trigger.id }}
    target:
      entity_id: '{{ fan_entity_id }}'
  mode: single
  variables:
    entity_id: sensor.guest_bathroom_sensor_humidity
    fan_entity_id: fan.guest_bathroom_fan
    above_threshold: 60
    below_threshold: 50
- id: 1892ee1e-8573-4ca5-b0d2-3983f07d3fcc
  alias: Fan Aux Button Toggle
  description: Fan Aux Automations
  trigger:
  - platform: state
    entity_id: fan.guest_bathroom_fan
    attribute: action
    to: config_single
  condition:
  - condition: state
    entity_id: fan.guest_bathroom_fan
    state: 'off'
  action:
  - service: script.turn_on
    target:
      entity_id: script.inovelli_aux_toggle_led_brightness
    data:
      variables:
        entity_id: '{{ entity_id }}'
        intensity_min: '{{ intensity_min }}'
        intensity_max: '{{ intensity_max }}'
        debug: '{{ debug }}'
  mode: restart
  trigger_variables:
    entity_id: fan.guest_bathroom_fan
  variables:
    entity_id: fan.guest_bathroom_fan
    intensity_min: 0
    intensity_max: 25
    debug: false
- id: 68f0421a-ad83-4775-b04d-ba4798c30ad6
  alias: Fan Timer
  description: Fan Timer Automations
  trigger:
  - platform: template
    value_template: '{{ is_state(entity_id, ''on'') }}'
    id: 'on'
  - platform: template
    value_template: '{{ is_state(entity_id, ''off'') }}'
    id: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.inovelli_falling_led
        data:
          entity_id: '{{ entity_id }}'
          on_color: '{{ on_color }}'
          on_intensity: '{{ on_intensity }}'
          off_color: '{{ off_color }}'
          off_intensity: '{{ off_intensity }}'
          duration: '{{ duration }}'
          step_transition_color: '{{ step_transition_color }}'
          step_transition_effect: '{{ step_transition_effect }}'
          step_transition_duration: '{{ step_transition_duration }}'
          step_transition_level: '{{ step_transition_level }}'
          step_transition_last_only: '{{ step_transition_last_only }}'
          debug: '{{ debug }}'
      - service: homeassistant.turn_off
        target:
          entity_id: '{{ entity_id }}'
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - alias: Level Set All LEDs
        service: script.turn_on
        target:
          entity_id: script.inovelli_level_set
        data:
          variables:
            entity_id: '{{ entity_id }}'
            on_color: '{{ on_color }}'
            on_intensity: '{{ on_intensity }}'
            off_color: '{{ off_color }}'
            off_intensity: '{{ off_intensity }}'
            debug: '{{ debug }}'
  mode: restart
  trigger_variables:
    entity_id: fan.guest_bathroom_fan
  variables:
    entity_id: fan.guest_bathroom_fan
    on_color: 80
    on_intensity: 40
    off_color: 160
    off_intensity: 15
    duration:
      minutes: 45
    step_transition_color: 0
    step_transition_effect: fast_blink
    step_transition_duration: 15
    step_transition_level: 100
    step_transition_last_only: true
    debug: false
- id: 94877b99-4d4e-47ec-9891-85043411cbd5
  alias: Light Automations
  description: Control the garage light
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_motion_detector_occupancy
    to: 'on'
    id: turn_on
  - platform: state
    entity_id: binary_sensor.garage_entry_contact
    to: 'on'
    id: turn_on
  - platform: state
    entity_id: binary_sensor.garage_motion_detector_occupancy
    to: 'off'
    for:
      minutes: 30
    id: turn_off
  - platform: state
    entity_id: light.garage_light
    to: 'on'
    for:
      hours: 2
    id: turn_off
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: turn_on
      sequence:
      - service: light.{{ trigger.id }}
        target:
          entity_id: light.garage_light
    - conditions:
      - condition: trigger
        id: turn_off
      - condition: state
        entity_id: light.garage_lights
        state: 'on'
        for:
          minutes: 10
      sequence:
      - service: light.{{ trigger.id }}
        target:
          entity_id: light.garage_light
  mode: single
- id: 198106e7-6edd-42d9-9771-50bd50f48108
  alias: Heater Floors Off Timer
  description: Turn heated floors off after a while
  trigger:
  - platform: state
    entity_id: climate.master_bathroom_heated_floors
    to: heat
    for:
      hours: 2
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: climate.turn_off
    target:
      entity_id: climate.master_bathroom_heated_floors
    data: {}
  mode: single
- id: b157a7b5-118e-4165-9255-7cf84355a778
  alias: Fan Humidity On
  description: Bathroom Humidity High
  trigger:
  - platform: numeric_state
    entity_id: sensor.master_bathroom_sensor_humidity
    above: 60
    id: turn_on
  - platform: numeric_state
    entity_id: sensor.master_bathroom_sensor_humidity
    below: 50
    for:
      minutes: 10
    id: turn_off
  action:
  - service: fan.{{ trigger.id }}
    target:
      entity_id: '{{ fan_entity_id }}'
  mode: single
  variables:
    entity_id: sensor.master_bathroom_sensor_humidity
    fan_entity_id: fan.master_bathroom_fan
    above_threshold: 60
    below_threshold: 50
- id: a407bf63-bace-421c-bd38-53951cc3070b
  alias: Fan Aux Button Toggle
  description: Fan Aux Automations
  trigger:
  - platform: state
    entity_id: fan.master_bathroom_fan
    attribute: action
    to: config_single
  condition:
  - condition: state
    entity_id: fan.master_bathroom_fan
    state: 'off'
  action:
  - service: script.turn_on
    target:
      entity_id: script.inovelli_aux_toggle_led_brightness
    data:
      variables:
        entity_id: '{{ entity_id }}'
        intensity_min: '{{ intensity_min }}'
        intensity_max: '{{ intensity_max }}'
        debug: '{{ debug }}'
  mode: restart
  trigger_variables:
    entity_id: fan.master_bathroom_fan
  variables:
    entity_id: fan.master_bathroom_fan
    intensity_min: 0
    intensity_max: 25
    debug: false
- id: d9d54a1b-599b-4f89-8a05-625d8e163740
  alias: Heated Floors On Scheduled
  description: Turn on heated floors in the morning
  trigger:
  - platform: template
    value_template: '{{ now().timestamp() | timestamp_custom(''%H:%M'') == (state_attr(''input_datetime.jena_alarm'',
      ''timestamp'') - 60*60) | timestamp_custom(''%H:%M'', false) }}'
    id: jena
  - platform: template
    value_template: '{{now().strftime(''%a %h %d %H:%M %Z %Y'') == (((state_attr(''sensor.mike_phone_next_alarm'',
      ''Time in Milliseconds'') | int / 1000) - 60*60 ) | timestamp_custom(''%a %h
      %d %H:%M %Z %Y''))}}'
    id: mike
  - platform: time
    at: 07:30:00
    id: weekend
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - alias: Mike is home
        condition: state
        entity_id: person.mike
        state: home
      - condition: trigger
        id: mike
    - condition: and
      conditions:
      - alias: Jena is Home
        condition: state
        entity_id: person.jena
        state: home
      - alias: Workday
        condition: state
        entity_id: binary_sensor.workday
        state: 'on'
      - condition: trigger
        id: jena
      - condition: template
        value_template: '{{ now().month >= 10 or now().month <= 4 }}'
      - condition: state
        entity_id: input_boolean.jena_alarm_enabled
        state: 'on'
    - condition: and
      conditions:
      - condition: trigger
        id: weekend
      - condition: or
        conditions:
        - alias: Jena is Home
          condition: state
          entity_id: person.jena
          state: home
        - alias: Mike is Home
          condition: state
          entity_id: person.mike
          state: home
      - alias: Not a workday
        condition: state
        entity_id: binary_sensor.workday
        state: 'off'
  action:
  - service: climate.set_temperature
    data:
      temperature: 27
    target:
      entity_id: climate.master_bathroom_heated_floors
  - service: climate.set_hvac_mode
    data:
      hvac_mode: heat
    target:
      entity_id: climate.master_bathroom_heated_floors
  mode: single
- id: 47ce85de-4474-4a6a-b42d-2fbe16cd123e
  alias: Heated Floor NTP Sync
  description: Periodically sync the time on the thermostat or it gets outdated
  trigger:
  - platform: time
    at: 04:00:00
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/Master Bathroom Heated Floors/set
      payload: '{"thermostat_time":""}'
  mode: single
- id: 976722e5-ead5-4d7d-8b2f-87c6cf2660e3
  alias: Fan Timer
  description: Fan Timer Automations
  trigger:
  - platform: template
    value_template: '{{ is_state(entity_id, ''on'') }}'
    id: 'on'
  - platform: template
    value_template: '{{ is_state(entity_id, ''off'') }}'
    id: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.inovelli_falling_led
        data:
          entity_id: '{{ entity_id }}'
          on_color: '{{ on_color }}'
          on_intensity: '{{ on_intensity }}'
          off_color: '{{ off_color }}'
          off_intensity: '{{ off_intensity }}'
          duration: '{{ duration }}'
          step_transition_color: '{{ step_transition_color }}'
          step_transition_effect: '{{ step_transition_effect }}'
          step_transition_duration: '{{ step_transition_duration }}'
          step_transition_level: '{{ step_transition_level }}'
          step_transition_last_only: '{{ step_transition_last_only }}'
          debug: '{{ debug }}'
      - service: homeassistant.turn_off
        target:
          entity_id: '{{ entity_id }}'
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - alias: Level Set All LEDs
        service: script.turn_on
        target:
          entity_id: script.inovelli_level_set
        data:
          variables:
            entity_id: '{{ entity_id }}'
            on_color: '{{ on_color }}'
            on_intensity: '{{ on_intensity }}'
            off_color: '{{ off_color }}'
            off_intensity: '{{ off_intensity }}'
            debug: '{{ debug }}'
  mode: restart
  trigger_variables:
    entity_id: fan.master_bathroom_fan
  variables:
    entity_id: fan.master_bathroom_fan
    on_color: 80
    on_intensity: 40
    off_color: 160
    off_intensity: 25
    duration:
      minutes: 45
    step_transition_color: 160
    step_transition_effect: fast_blink
    step_transition_duration: 15
    step_transition_level: 100
    step_transition_last_only: true
    debug: false
- id: cad5624d-eb4c-419f-a4e7-ab23908374ec
  alias: 'Home Alarm: Notify Armed Away'
  description: Notify when alarm is armed in away mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
  condition:
  - condition: time
    before: '23:00:00'
    after: 07:00:00
  action:
  - service: notify.all_devices
    data:
      title: 'Home Alarm: Armed'
      message: The alarm is armed in away mode {{ states('sensor.date_time') }}
  mode: single
- id: 34ef1af8-d192-491b-b1f4-b53abdb3989e
  alias: 'Home Alarm: Notify Armed Home'
  description: Notify when alarm is armed in home mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_home
  condition:
  - condition: time
    before: '23:00:00'
    after: 07:00:00
  action:
  - service: notify.all_devices
    data:
      title: 'Home Alarm: Armed'
      message: 'The alarm is armed in home mode {{ states(''sensor.date_time'') }}

        '
  mode: single
- id: e0fa138f-125b-4981-9873-6090bc8b872a
  alias: 'Home Alarm: Entity Triggers'
  description: Sensors that trigger the alarm
  trigger:
  - platform: state
    entity_id: binary_sensor.office_window_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.guest_bedroom_window_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.patio_door_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.balcony_door_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.kitchen_window_contact
    to: 'on'
  - platform: state
    entity_id: lock.front_door_lock
    to: unlocked
  - platform: state
    entity_id: lock.front_door_lock
    to: unlocking
  - platform: state
    entity_id: cover.gdo_door
    to: open
  - platform: state
    entity_id: cover.gdo_door
    to: opening
  - platform: state
    entity_id: binary_sensor.entry_door_window_vibration
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      state: armed_home
      entity_id: alarm_control_panel.home_alarm
    - condition: state
      state: armed_away
      entity_id: alarm_control_panel.home_alarm
    - condition: state
      state: armed_night
      entity_id: alarm_control_panel.home_alarm
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  mode: single
- id: 06707973-3d59-455b-a7dc-e2ab8b1b8769
  alias: 'Home Alarm: Front Door Auto Disarm'
  description: Disarm alarm if unlocked by known entity
  trigger:
  - platform: state
    entity_id:
    - lock.front_door_lock
    to: unlocked
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state:
    - armed_away
    - armed_home
  - condition: state
    entity_id: sensor.front_door_lock_operator
    state:
    - Jena Drysdale
    - Mike Chester
  action:
  - service: alarm_control_panel.alarm_disarm
    data:
      code: '!secret alarm_control_panel_code'
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: 2239d616-cfe2-40ab-8135-41888b1240da
  alias: 'Home Alarm: Notify Alarm Pending'
  description: Notify when alarm is pending
  trigger:
  - platform: state
    entity_id: binary_sensor.office_window_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.guest_bedroom_window_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.patio_door_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.balcony_door_contact
    to: 'on'
  - platform: state
    entity_id: binary_sensor.kitchen_window_contact
    to: 'on'
  - platform: state
    entity_id: lock.front_door_lock
    to: unlocked
  - platform: state
    entity_id: lock.front_door_lock
    to: unlocking
  - platform: state
    entity_id: cover.gdo_door
    to: open
  - platform: state
    entity_id: cover.gdo_door
    to: opening
  - platform: state
    entity_id: binary_sensor.entry_door_window_vibration
    to: 'on'
  action:
  - alias: Save which sensor triggered
    variables:
      sensor_triggered: '{{ trigger.from_state.attributes.friendly_name }}'
  - wait_for_trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: triggered
    timeout: '120'
    continue_on_timeout: false
  - if:
    - alias: Night Time Critical
      condition: time
      after: '23:00:00'
      before: 06:00:00
    then:
    - service: notify.all_devices
      data:
        title: 'Home Alarm: Triggered!'
        message: '{{ sensor_triggered }} was opened!'
        data:
          actions:
          - action: ALARM_DISARM
            title: Disarm
          - action: ALARM_ARM
            title: Re-Arm
          ttl: 0
          priority: high
          channel: alarm_stream
          push:
            sound:
              name: default
              critical: 1
              volume: 1
    else:
    - service: notify.all_devices
      data:
        title: 'Home Alarm: Triggered!'
        message: '{{ sensor_triggered }} was opened!'
        data:
          actions:
          - action: ALARM_DISARM
            title: Disarm
          - action: ALARM_ARM
            title: Re-Arm
  mode: parallel
- id: fa449fc7-fb68-40f9-b971-8295e4883180
  alias: 'Home Alarm: Notify Disarmed'
  description: Notify when alarm is disarmed
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  action:
  - service: notify.all_devices
    data:
      title: 'Home Alarm: Disarmed'
      message: The alarm is disarmed at {{ states('sensor.date_time') }}
- id: e18e7f27-3d1a-46be-bdde-0f7bf3d54c03
  alias: 'Home Alarm: Armed Away Unoccupied'
  description: Arm alarm when leaving home
  trigger:
  - platform: zone
    entity_id: person.jena
    zone: zone.home
    event: leave
  - platform: zone
    entity_id: person.mike
    zone: zone.home
    event: leave
  condition:
  - condition: not
    conditions:
    - condition: or
      conditions:
      - condition: zone
        entity_id: person.jena
        zone: zone.home
      - condition: zone
        entity_id: person.mike
        zone: zone.home
  action:
  - service: alarm_control_panel.alarm_arm_away
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  mode: single
