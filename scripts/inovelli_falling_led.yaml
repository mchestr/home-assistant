alias: Inovelli Falling LED
mode: parallel
fields:
  entity_id:
    description: The Inovelli Switch
    required: true
    selector:
      entity:
        integration: mqtt
        domain:
          - light
          - fan
  duration:
    description: Length of time to fall in seconds
    selector:
      duration:
  total_leds:
    description: Number of LEDs per switch
    required: false
    selector:
      number:
        min: 1
        max: 7
  on_color:
    description: Colour of LED when on
    required: true
    selector:
      number:
        min: 0
        max: 255
  on_intensity:
    description: LED Intensity when on
    required: true
    selector:
      number:
        min: 0
        max: 100
  off_color:
    description: Colour of LED when off
    required: true
    selector:
      number:
        min: 0
        max: 255
  off_intensity:
    description: LED Intensity when off
    required: true
    selector:
      number:
        min: 0
        max: 100
  step_transition_color:
    description: Color for transition effect
    required: true
    selector:
      number:
        min: 0
        max: 255
  step_transition_effect:
    description: Effect to use during transition
    required: true
    selector:
      select:
        options:
          - "off"
          - solid
          - fast_blink
          - slow_blink
          - pulse
          - chase
          - open_close
          - small_to_big
          - aurora
          - slow_falling
          - medium_falling
          - fast_falling
          - slow_rising
          - medium_rising
          - fast_rising
          - medium_blink
          - slow_chase
          - fast_chase
          - fast_siren
          - slow_siren
          - clear_effect
  step_transition_duration:
    description: Duration of LED effct when state transitions. 0 to disable.
    required: false
    selector:
      number:
        min: 0
        max: 60
  step_transition_level:
    description: LED Intensity when transitioning
    required: true
    selector:
      number:
        min: 0
        max: 100
  step_transition_last_only:
    description: Only run transition on last LED
    required: false
    selector:
      boolean:
  debug:
    description: Enable Debug
    required: false
  
sequence:
  - alias: Calculate Intervals
    variables:
      debug: "{{ debug | default(false) }}"
      total_leds: "{{ total_leds | default(7) }}"
      interval_seconds: "{{ (duration.hours | default(0) | multiply(3600) | int) + (duration.minutes | default(0) | multiply(60) | int) + (duration.seconds | default(0)) }}"
      step_transition_duration: "{{ step_transition_duration | default(0) }}"
      step_transition_last_only: "{{ iif(step_transition_last_only, true, false) }}"
      total_step_duration: "{{ ((interval_seconds / total_leds) | int) }}"
      entity_name: "{{ entity_id.replace('sensor.', '').replace('fan.', '') }}"

  - alias: Debug
    if: "{{ debug }}"
    then:
      - service: persistent_notification.create
        data:
          message: >
            inovelli_falling_led 
              entity_id={{entity_id}}
              entity_name={{entity_name}}
              total_leds={{total_leds}}
              duration={{duration}}
              on_color={{on_color}}
              on_intensity={{on_intensity}}
              off_color={{off_color}}
              off_intensity={{off_intensity}}
              interval_seconds={{interval_seconds}}
              step_duration={{step_duration}}
              step_transition_color={{step_transition_color}}
              step_transition_effect={{step_transition_effect}}
              step_transition_duration={{step_transition_duration}}
              step_transition_level={{step_transition_level}}
              step_transition_last_only={{step_transition_last_only}}

  - alias: Execute Transition Steps
    repeat:
      count: "{{ total_leds }}"
      sequence:
        - alias: Set variables for iteration
          variables:
            led: "{{ 1 + total_leds - repeat.index }}"
            # Individual LEDs effects are applied on a 0-index, unlike the sensors it seems like.
            led_offset: "{{ led - 1 }}"
            # Calculate the first wait duration, considering the transition times.
            first_wait_duration: >
              {% if not step_transition_last_only or (step_transition_last_only and led_offset == 0) %}
              {{ total_step_duration - step_transition_duration }}
              {% else %}
              {{ total_step_duration }}
              {% endif %}
        - delay:
            seconds: "{{ first_wait_duration }}"

        - alias: Trigger step transition effect
          if: "{{ step_transition_duration > 0 and ((step_transition_last_only and led_offset == 0) or (not step_transition_last_only)) }}"
          then:
            - service: script.turn_on
              target:
                entity_id: script.inovelli_individual_led_effect
              data:
                variables:
                  entity_id: "{{ entity_id }}"
                  led: "{{ led_offset }}"
                  effect: "{{ step_transition_effect }}"
                  color: "{{ step_transition_color }}"
                  level: "{{ step_transition_level }}"
                  duration: "{{ step_transition_duration }}"
                  debug: "{{ debug }}"
            - delay:
                seconds: "{{ step_transition_duration }}"

        - alias: Set Intensity Falling
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ led }}intensitywhenon"
          data:
            value: "{{ off_intensity }}"

        - alias: Set Color Falling
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ led }}colorwhenon"
          data:
            value: "{{ off_color }}"
