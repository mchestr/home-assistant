alias: Inovelli Falling LED
mode: parallel
fields:
  entity_id:
    description: The Inovelli Switch
    example: fan.bedroom_fan
    required: true
    selector:
      device:
        filter:
          - manufacturer: Inovelli
  duration:
    description: Length of time to fall in seconds
    selector:
      duration:
  total_leds:
    description: Number of LEDs per switch
    required: true
    selector:
      number:
        min: 1
        max: 7
  on_colour:
    description: Colour of LED when on
    required: true
    selector:
      number:
        min: 0
        max: 255
  on_intensity:
    description: LED Intensity when on
    required: true
    selector:
      number:
        min: 0
        max: 100
  off_colour:
    description: Colour of LED when off
    required: true
    selector:
      number:
        min: 0
        max: 255
  off_intensity:
    description: LED Intensity when off
    required: true
    selector:
      number:
        min: 0
        max: 100
  
sequence:
  - alias: Calculate Intervals
    variables:
      interval_seconds: "{{ (duration.hours | default(0) | multiply(3600) | int) + (duration.minutes | default(0) | multiply(60) | int) + (duration.seconds | default(0)) }}"
      step_duration: "{{ (interval_seconds / total_leds) | int }}"
      entity_name: "{{ entity_id.replace('sensor.', '').replace('fan.', '') }}"

  # - alias: Debug
  #   service: persistent_notification.create
  #   data:
  #     message: "FallingLED: entity_id={{entity_id}},duration={{duration}},on_colour={{on_colour}},on_intensity={{on_intensity}},off_colour={{off_colour}},off_intensity={{off_intensity}},interval_seconds={{interval_seconds}},step_duration={{step_duration}},entity_name={{entity_name}}"

  - alias: Execute Transition Steps
    repeat:
      count: "{{ total_leds }}"
      sequence:
        - delay:
            seconds: "{{ step_duration }}"
        - alias: Set Intensity Falling
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ 1 + total_leds - repeat.index }}intensitywhenon"
          data:
            value: "{{ off_intensity }}"
        - alias: Set Color Falling
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ 1 + total_leds - repeat.index }}colorwhenon"
          data:
            value: "{{ off_colour }}"
