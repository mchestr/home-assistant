alias: Inovelli Level Set
mode: parallel
fields:
  entity_id:
    description: The Inovelli Switch
    required: true
    selector:
      entity:
        integration: mqtt
        domain:
          - light
          - fan
  total_leds:
    description: Number of LEDs per switch
    required: true
    selector:
      number:
        min: 1
        max: 7
  on_color:
    description: Colour of LED when on
    required: true
    selector:
      number:
        min: 0
        max: 255
  on_intensity:
    description: LED Intensity when on
    required: true
    selector:
      number:
        min: 0
        max: 100
  off_color:
    description: Colour of LED when off
    required: true
    selector:
      number:
        min: 0
        max: 255
  off_intensity:
    description: LED Intensity when off
    required: true
    selector:
      number:
        min: 0
        max: 100

  debug:
    description: Enable Debug
    required: false
  
sequence:
  - alias: Set Variables
    variables:
      entity_name: "{{ entity_id.replace('sensor.', '').replace('fan.', '') }}"
      debug: "{{ debug | default(false) }}"

  - alias: Debug
    if:
      - "{{ debug }}"
    then:
      - service: persistent_notification.create
        data:
          message: "LevelSet: entity_id={{entity_id}},duration={{duration}},on_color={{on_color}},on_intensity={{on_intensity}},off_color={{off_color}},off_intensity={{off_intensity}},interval_seconds={{interval_seconds}},step_duration={{step_duration}},entity_name={{entity_name}}"

  - alias: Set Colour When On
    service: number.set_value
    target:
      entity_id: "number.{{ entity_name }}_ledcolorwhenon"
    data:
      value: "{{ on_color }}"
  - alias: Set Intensity When On
    service: number.set_value
    target:
      entity_id: "number.{{ entity_name }}ledintensitywhenon"
    data:
      value: "{{ on_intensity }}"
  - alias: Set Colour When Off
    service: number.set_value
    target:
      entity_id: "number.{{ entity_name }}_ledcolorwhenoff"
    data:
      value: "{{ off_color }}"
  - alias: Set Intensity When Off
    service: number.set_value
    target:
      entity_id: "number.{{ entity_name }}ledintensitywhenoff"
    data:
      value: "{{ off_intensity }}"

  - alias: Level Set All LEDs
    repeat:
      count: "{{ total_leds }}"
      sequence:
        - alias: Set Intensity When On
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ repeat.index }}intensitywhenon"
          data:
            value: "{{ on_intensity }}"
        - alias: Set Color When On
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ repeat.index }}colorwhenon"
          data:
            value: "{{ on_color }}"
        - alias: Set Intensity When Off
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ repeat.index }}intensitywhenoff"
          data:
            value: "{{ off_intensity }}"
        - alias: Set Color When Off
          service: number.set_value
          target:
            entity_id: "number.{{ entity_name }}_defaultled{{ repeat.index }}colorwhenoff"
          data:
            value: "{{ off_color }}"

